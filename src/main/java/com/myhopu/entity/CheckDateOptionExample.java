package com.myhopu.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CheckDateOptionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public CheckDateOptionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSettingIdIsNull() {
            addCriterion("SETTING_ID is null");
            return (Criteria) this;
        }

        public Criteria andSettingIdIsNotNull() {
            addCriterion("SETTING_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSettingIdEqualTo(Long value) {
            addCriterion("SETTING_ID =", value, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdNotEqualTo(Long value) {
            addCriterion("SETTING_ID <>", value, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdGreaterThan(Long value) {
            addCriterion("SETTING_ID >", value, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SETTING_ID >=", value, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdLessThan(Long value) {
            addCriterion("SETTING_ID <", value, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdLessThanOrEqualTo(Long value) {
            addCriterion("SETTING_ID <=", value, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdIn(List<Long> values) {
            addCriterion("SETTING_ID in", values, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdNotIn(List<Long> values) {
            addCriterion("SETTING_ID not in", values, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdBetween(Long value1, Long value2) {
            addCriterion("SETTING_ID between", value1, value2, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingIdNotBetween(Long value1, Long value2) {
            addCriterion("SETTING_ID not between", value1, value2, "settingId");
            return (Criteria) this;
        }

        public Criteria andSettingDateIsNull() {
            addCriterion("SETTING_DATE is null");
            return (Criteria) this;
        }

        public Criteria andSettingDateIsNotNull() {
            addCriterion("SETTING_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andSettingDateEqualTo(Date value) {
            addCriterion("SETTING_DATE =", value, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateNotEqualTo(Date value) {
            addCriterion("SETTING_DATE <>", value, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateGreaterThan(Date value) {
            addCriterion("SETTING_DATE >", value, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateGreaterThanOrEqualTo(Date value) {
            addCriterion("SETTING_DATE >=", value, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateLessThan(Date value) {
            addCriterion("SETTING_DATE <", value, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateLessThanOrEqualTo(Date value) {
            addCriterion("SETTING_DATE <=", value, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateIn(List<Date> values) {
            addCriterion("SETTING_DATE in", values, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateNotIn(List<Date> values) {
            addCriterion("SETTING_DATE not in", values, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateBetween(Date value1, Date value2) {
            addCriterion("SETTING_DATE between", value1, value2, "settingDate");
            return (Criteria) this;
        }

        public Criteria andSettingDateNotBetween(Date value1, Date value2) {
            addCriterion("SETTING_DATE not between", value1, value2, "settingDate");
            return (Criteria) this;
        }

        public Criteria andAmStatusIsNull() {
            addCriterion("AM_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andAmStatusIsNotNull() {
            addCriterion("AM_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andAmStatusEqualTo(Short value) {
            addCriterion("AM_STATUS =", value, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusNotEqualTo(Short value) {
            addCriterion("AM_STATUS <>", value, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusGreaterThan(Short value) {
            addCriterion("AM_STATUS >", value, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("AM_STATUS >=", value, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusLessThan(Short value) {
            addCriterion("AM_STATUS <", value, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusLessThanOrEqualTo(Short value) {
            addCriterion("AM_STATUS <=", value, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusIn(List<Short> values) {
            addCriterion("AM_STATUS in", values, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusNotIn(List<Short> values) {
            addCriterion("AM_STATUS not in", values, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusBetween(Short value1, Short value2) {
            addCriterion("AM_STATUS between", value1, value2, "amStatus");
            return (Criteria) this;
        }

        public Criteria andAmStatusNotBetween(Short value1, Short value2) {
            addCriterion("AM_STATUS not between", value1, value2, "amStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusIsNull() {
            addCriterion("PM_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andPmStatusIsNotNull() {
            addCriterion("PM_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andPmStatusEqualTo(Short value) {
            addCriterion("PM_STATUS =", value, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusNotEqualTo(Short value) {
            addCriterion("PM_STATUS <>", value, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusGreaterThan(Short value) {
            addCriterion("PM_STATUS >", value, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("PM_STATUS >=", value, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusLessThan(Short value) {
            addCriterion("PM_STATUS <", value, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusLessThanOrEqualTo(Short value) {
            addCriterion("PM_STATUS <=", value, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusIn(List<Short> values) {
            addCriterion("PM_STATUS in", values, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusNotIn(List<Short> values) {
            addCriterion("PM_STATUS not in", values, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusBetween(Short value1, Short value2) {
            addCriterion("PM_STATUS between", value1, value2, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andPmStatusNotBetween(Short value1, Short value2) {
            addCriterion("PM_STATUS not between", value1, value2, "pmStatus");
            return (Criteria) this;
        }

        public Criteria andWeekIsNull() {
            addCriterion("WEEK is null");
            return (Criteria) this;
        }

        public Criteria andWeekIsNotNull() {
            addCriterion("WEEK is not null");
            return (Criteria) this;
        }

        public Criteria andWeekEqualTo(Short value) {
            addCriterion("WEEK =", value, "week");
            return (Criteria) this;
        }

        public Criteria andWeekNotEqualTo(Short value) {
            addCriterion("WEEK <>", value, "week");
            return (Criteria) this;
        }

        public Criteria andWeekGreaterThan(Short value) {
            addCriterion("WEEK >", value, "week");
            return (Criteria) this;
        }

        public Criteria andWeekGreaterThanOrEqualTo(Short value) {
            addCriterion("WEEK >=", value, "week");
            return (Criteria) this;
        }

        public Criteria andWeekLessThan(Short value) {
            addCriterion("WEEK <", value, "week");
            return (Criteria) this;
        }

        public Criteria andWeekLessThanOrEqualTo(Short value) {
            addCriterion("WEEK <=", value, "week");
            return (Criteria) this;
        }

        public Criteria andWeekIn(List<Short> values) {
            addCriterion("WEEK in", values, "week");
            return (Criteria) this;
        }

        public Criteria andWeekNotIn(List<Short> values) {
            addCriterion("WEEK not in", values, "week");
            return (Criteria) this;
        }

        public Criteria andWeekBetween(Short value1, Short value2) {
            addCriterion("WEEK between", value1, value2, "week");
            return (Criteria) this;
        }

        public Criteria andWeekNotBetween(Short value1, Short value2) {
            addCriterion("WEEK not between", value1, value2, "week");
            return (Criteria) this;
        }

        public Criteria andDaynumIsNull() {
            addCriterion("DAYNUM is null");
            return (Criteria) this;
        }

        public Criteria andDaynumIsNotNull() {
            addCriterion("DAYNUM is not null");
            return (Criteria) this;
        }

        public Criteria andDaynumEqualTo(Long value) {
            addCriterion("DAYNUM =", value, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumNotEqualTo(Long value) {
            addCriterion("DAYNUM <>", value, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumGreaterThan(Long value) {
            addCriterion("DAYNUM >", value, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumGreaterThanOrEqualTo(Long value) {
            addCriterion("DAYNUM >=", value, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumLessThan(Long value) {
            addCriterion("DAYNUM <", value, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumLessThanOrEqualTo(Long value) {
            addCriterion("DAYNUM <=", value, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumIn(List<Long> values) {
            addCriterion("DAYNUM in", values, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumNotIn(List<Long> values) {
            addCriterion("DAYNUM not in", values, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumBetween(Long value1, Long value2) {
            addCriterion("DAYNUM between", value1, value2, "daynum");
            return (Criteria) this;
        }

        public Criteria andDaynumNotBetween(Long value1, Long value2) {
            addCriterion("DAYNUM not between", value1, value2, "daynum");
            return (Criteria) this;
        }

        public Criteria andMessageIsNull() {
            addCriterion("MESSAGE is null");
            return (Criteria) this;
        }

        public Criteria andMessageIsNotNull() {
            addCriterion("MESSAGE is not null");
            return (Criteria) this;
        }

        public Criteria andMessageEqualTo(String value) {
            addCriterion("MESSAGE =", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotEqualTo(String value) {
            addCriterion("MESSAGE <>", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageGreaterThan(String value) {
            addCriterion("MESSAGE >", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageGreaterThanOrEqualTo(String value) {
            addCriterion("MESSAGE >=", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLessThan(String value) {
            addCriterion("MESSAGE <", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLessThanOrEqualTo(String value) {
            addCriterion("MESSAGE <=", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLike(String value) {
            addCriterion("MESSAGE like", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotLike(String value) {
            addCriterion("MESSAGE not like", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageIn(List<String> values) {
            addCriterion("MESSAGE in", values, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotIn(List<String> values) {
            addCriterion("MESSAGE not in", values, "message");
            return (Criteria) this;
        }

        public Criteria andMessageBetween(String value1, String value2) {
            addCriterion("MESSAGE between", value1, value2, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotBetween(String value1, String value2) {
            addCriterion("MESSAGE not between", value1, value2, "message");
            return (Criteria) this;
        }

        public Criteria andIsHolidayIsNull() {
            addCriterion("IS_HOLIDAY is null");
            return (Criteria) this;
        }

        public Criteria andIsHolidayIsNotNull() {
            addCriterion("IS_HOLIDAY is not null");
            return (Criteria) this;
        }

        public Criteria andIsHolidayEqualTo(Short value) {
            addCriterion("IS_HOLIDAY =", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayNotEqualTo(Short value) {
            addCriterion("IS_HOLIDAY <>", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayGreaterThan(Short value) {
            addCriterion("IS_HOLIDAY >", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayGreaterThanOrEqualTo(Short value) {
            addCriterion("IS_HOLIDAY >=", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayLessThan(Short value) {
            addCriterion("IS_HOLIDAY <", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayLessThanOrEqualTo(Short value) {
            addCriterion("IS_HOLIDAY <=", value, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayIn(List<Short> values) {
            addCriterion("IS_HOLIDAY in", values, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayNotIn(List<Short> values) {
            addCriterion("IS_HOLIDAY not in", values, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayBetween(Short value1, Short value2) {
            addCriterion("IS_HOLIDAY between", value1, value2, "isHoliday");
            return (Criteria) this;
        }

        public Criteria andIsHolidayNotBetween(Short value1, Short value2) {
            addCriterion("IS_HOLIDAY not between", value1, value2, "isHoliday");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated do_not_delete_during_merge Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_CHECKDATEOPTION
     *
     * @mbg.generated Fri Nov 16 09:08:24 GMT+08:00 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}